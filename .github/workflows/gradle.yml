name: Java CI with Gradle

# Event Trigger
# Master 브랜치에 push, pull request 실행 시 동작
on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Set up JDK 21
      uses: actions/setup-java@v3
      with:
        java-version: '21'
        distribution: 'temurin'

    # gradlew 에 권한 부여
    - name: Grant execute permission for gradlew
      run: chmod +x gradlew

    # build
    - name: Build with Gradle
      run: ./gradlew clean build

    # 전송할 파일을 담을 디렉토리 생성
    - name: Make Directory for deliver
      run: mkdir deploy

    # Jar 파일 Copy
    - name: Copy Jar
      run: cp ./build/libs/*.jar ./deploy

    # appspec.yml 파일 복사
    - name: Copy appspec.yml
      run: cp appspec.yml ./deploy

    # script files 복사
    - name: Copy script
      run: cp ./script/*.sh ./deploy

    # 압축 파일 형태로 전달
    - name: Make zip file
      run: zip -r -qq -j ./platfra.zip ./deploy
      shell: bash

    # S3 설정
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ap-northeast-2

    # S3 uplaod
    - name: Upload to S3
      run: aws s3 cp --region ap-northeast-2 ./platfra.zip s3://platfra-code


    # Deploy
    - name: Deploy
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      run:
        aws deploy create-deployment --application-name platfra --deployment-group-name platfra_group --file-exists-behavior OVERWRITE --s3-location bucket=platfra-code,bundleType=zip,key=platfra.zip --region ap-northeast-2


    
